(dp1
S'output'
p2
S"<type 'exceptions.IndexError'> no such item for Cursor instance"
p3
sS'layer'
p4
S'/home/rangel/Desktop/web2py/applications/Data_Mining/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\n\n\ndef index():\n    import pymongo\n    client = pymongo.MongoClient("localhost", 27017)\n    db = client.datamining\n    query = db.ranking.find()\n    errormsg = \'\'\n\n\n    pontos = []\n    nomes = []\n\n    for group in query:\n        pontos.append(max(group[\'points_open\']))\n        nomes.append(group[\'dupla\'])\n\n    pontos, nomes = zip(*sorted(zip(pontos, nomes)))\n    pontos = pontos[::-1]\n    nomes = nomes[::-1]\n\n    \n    passwd = request.vars.password\n    file = request.vars.fileToUpload\n\n    errormsg = \'\'\n\n    if passwd != None:\n        try:\n            query2 = db.ranking.find({"passwd": passwd})\n            errormsg = "Dupla precisa ser inteiro"\n            query2[0][\'dupla\']\n\n        except TypeError:\n            errormsg = "Grupo inexistente. Verifique a chave."\n\n\n    return dict(nomes=nomes, pontos=pontos, errormsg=errormsg)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/rangel/Desktop/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/rangel/Desktop/web2py/applications/Data_Mining/controllers/default.py", line 89, in <module>\n  File "/home/rangel/Desktop/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/rangel/Desktop/web2py/applications/Data_Mining/controllers/default.py", line 41, in index\n    query2[0][\'dupla\']\n  File "/usr/local/lib/python2.7/dist-packages/pymongo/cursor.py", line 570, in __getitem__\n    raise IndexError("no such item for Cursor instance")\nIndexError: no such item for Cursor instance\n'
p11
s.